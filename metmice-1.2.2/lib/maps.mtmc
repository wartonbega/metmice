!set_compute_mode(1);

struct map 
{
    [] -> keys;
    [] -> values;

    add(self, key, value)[none]
    {
        self.keys + key;
        self.values + value;
    };

    get(self, key)[none]
    {
        length self.values;
        + 0 -> len;
        for(i, 0, len)
        {
            if(self.keys*i = key)
            {
                return self.values * i;
            };
        };
    };

    in(self, key)[none]
    {
        length self.values;
        + 0 -> len;
        for(i, 0, len)
        {
            if(self.keys*i = key)
            {
                return true;
            };
        };
        return false;
    };

    print(self)[none]
    {
        length self.values;
        + 0 -> len;
        for(i, 0, len)
        {
            self.keys*i -> k;
            self.values*i -> v;
            push 1 " { ";
            push 1 k;
            push 1 " : ";
            push 1 v;
            push 1 " }";
        };
        push 1 "\n";
    };

    to_string(self)[none]
    {
        "" -> str;
        length self.values;
        + 0 -> len;
        for(i, 0, len)
        {
            self.keys*i -> k;
            self.values*i -> v;
            str + " { " -> str;
            str + k -> str;
            str + " : " -> str;
            str + v -> str;
            str + " }" -> str;

        };
        return str;
    };
};
