include "../lib/std.mtmc";

int_to_list2(n)[none]
{
    n % 10 -> r;
    if (r = n)
    {
        [] -> l;
        l + r;
        return l;
    };
    n - r -> n;
    n / 10 -> t;
    !int_to_list2(t) -> l;
    l + r;
    return l;
};


is_palyndrom(list)[none]
{
    !get_compute_mode() -> mode;
    !set_compute_mode(0);
    if (!len(list) 3 =)
    {
        if (list [-1]* list [0]* =)
        {
            !set_compute_mode(mode);
            return true;
        };
        !set_compute_mode(mode);
        return false;
    };
    if (!len(list) 4 =)
    {
        if (list [-1]* list [0]* =)
        {
            if (list [-2]* list [1]* =)
            {   
                !set_compute_mode(mode);
                return true;
            };  
        };
        !set_compute_mode(mode);
        return false;
    };
    if (!len(list) 5 =)
    {
        if (list [-1]* list [0]* =)
        {
            if (list [-2]* list [1]* =)
            {   
                !set_compute_mode(mode);
                return true;
            };  
        };
        !set_compute_mode(mode);
        return false;
    };
    if (!len(list) 6 =)
    {
        if (list [-1] * list [0] * =)
        {
            if (list [-2] * list [1] * =)
            {
                if (list [-3] * list [2] * =)
                {
                    !set_compute_mode(mode);
                    return true;
                };
            };  
        };
        !set_compute_mode(mode);
        return false;
    };
    !set_compute_mode(mode);
    return false;
};

main()[none]
{
    for(u, 0, 100)
    {
        1000 - u -> u;
        for(v, 0, 100)
        {
            1000 - v -> v;
            if (!is_palyndrom(!int_to_list2(u * v))){
                push 1 u;
                push 1 " * ";
                push 1 v;
                push 1 " = ";
                push 1 u * v;
                push 1 "\n";
                return "";
            };
        };
    };
};
!main();